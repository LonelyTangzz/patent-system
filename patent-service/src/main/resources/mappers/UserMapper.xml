<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tang.patent.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.tang.patent.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="phone_num" property="phoneNum" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="CHAR"/>
        <result column="birth" property="birth" jdbcType="TIMESTAMP"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="realname" property="realname" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, sex, phone_num, email, birth, location, avatar, create_time, 
    login_time, realname
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--新增-->
    <select id="checkAccount" resultType="java.lang.Integer" parameterType="com.tang.patent.entity.User">
    SELECT count(*) FROM user where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR} ;
  </select>
    <select id="selectIdByName" resultType="java.lang.Integer" parameterType="java.lang.String">
    SELECT id FROM user where username = "${username}" ;
  </select>
    <update id="updateUserImg" parameterType="com.tang.patent.entity.User">
        update user
        <set>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getPageUser" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    *
    from user
    limit #{num,jdbcType=INTEGER},10
  </select>
    <select id="countUser" resultType="java.lang.Integer">
    select count(*)
    from user
  </select>
    <select id="countUserByMonth"  resultType="java.util.HashMap">
    select day(create_time) as register_time , count(*) as total
    from user
    where month (create_time) = #{month,jdbcType=VARCHAR}
    and year(create_time) = #{year,jdbcType=VARCHAR}
    group by day (create_time)
     order by day (create_time) asc
  </select>
    <!--新增-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.tang.patent.entity.User">
    insert into user (id, username, password, 
      sex, phone_num, email, birth, 
      location, avatar, create_time, 
      login_time, realname)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{phoneNum,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{birth,jdbcType=TIMESTAMP}, 
      #{location,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{realname,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.tang.patent.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="realname != null">
                realname,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="phoneNum != null">
                #{phoneNum,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=CHAR},
            </if>
            <if test="birth != null">
                #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tang.patent.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=CHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tang.patent.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone_num = #{phoneNum,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      birth = #{birth,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      realname = #{realname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>