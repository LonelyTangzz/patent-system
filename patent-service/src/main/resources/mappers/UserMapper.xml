<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tang.patent.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.tang.patent.entity.bean.User">
        <id column="pkId" property="pkId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="phoneNum" property="phoneNum" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="CHAR"/>
        <result column="birth" property="birth" jdbcType="TIMESTAMP"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="loginTime" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="realName" property="realName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    pkId, username, password, sex, phoneNum, email, birth, location, avatar, createTime, loginTime, realName
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where pkId = #{id,jdbcType=INTEGER}
    </select>
    <!--新增-->
    <select id="checkAccount" resultType="java.lang.Integer" parameterType="com.tang.patent.entity.bean.User">
    SELECT count(pkId) FROM user WHERE username = #{username,jdbcType=VARCHAR} AND password = #{password,jdbcType=VARCHAR}
  </select>
    <select id="selectIdByName" resultType="java.lang.Integer" parameterType="java.lang.String">
    SELECT pkId FROM user where username = #{username};
  </select>
    <update id="updateUserImg" parameterType="com.tang.patent.entity.bean.User">
        update user
        <set>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
        </set>
        where pkId = #{pkId}
    </update>
    <select id="getPageUser" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    *
    from user
    limit #{num,jdbcType=INTEGER},10
  </select>
    <select id="countUser" resultType="java.lang.Integer">
    select count(*)
    from user
  </select>
    <select id="countUserByMonth"  resultType="java.util.HashMap">
    select day(createTime) as registerTime , count(*) as total
    from user
    where month (createTime) = #{month,jdbcType=VARCHAR}
    and year(createTime) = #{year,jdbcType=VARCHAR}
    group by day (createTime)
     order by day (createTime) asc
  </select>
    <!--新增-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where pkId = #{pkId}
  </delete>
    <insert id="insert" parameterType="com.tang.patent.entity.bean.User">
    insert into user (pkId, username, password,
      sex, phoneNum, email, birth,
      location, avatar, createTime,
      loginTime, realName)
    values (#{pkId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{sex,jdbcType=TINYINT}, #{phoneNum,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{birth,jdbcType=TIMESTAMP}, 
      #{location,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{realName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.tang.patent.entity.bean.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkId != null">
                pkId,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phoneNum != null">
                phoneNum,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="loginTime != null">
                loginTime,
            </if>
            <if test="realName != null">
                realName,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkId != null">
                #{pkId,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="phoneNum != null">
                #{phoneNum,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=CHAR},
            </if>
            <if test="birth != null">
                #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tang.patent.entity.bean.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="phoneNum != null">
                phoneNum = #{phoneNum,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=CHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginTime != null">
                loginTime = #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realName != null">
                realName = #{realName,jdbcType=VARCHAR},
            </if>
        </set>
        where pkId = #{pkId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tang.patent.entity.bean.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phonenum = #{phoneNum,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      birth = #{birth,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      loginTime = #{loginTime,jdbcType=TIMESTAMP},
      realName = #{realName,jdbcType=VARCHAR}
    where pkId = #{pkId,jdbcType=BIGINT}
  </update>
</mapper>